%!PS-Adobe-3.0
%%Title: Types.hs
%%For: fluffy
%%Creator: NVIM v0.2.0
%%CreationDate: Fri Nov 10 11:04:53 2017
%%DocumentData: Clean8Bit
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%BoundingBox: 59 49 564 800
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%DocumentSuppliedResources: procset VIM-Prolog 1.4 1
%%+ encoding VIM-latin1 1.0 0
%%Requirements: duplex collate color
%%EndComments
%%BeginDefaults
%%PageResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%PageMedia: A4
%%EndDefaults
%%BeginProlog
%%BeginResource: procset VIM-Prolog
%%BeginDocument: /usr/local/Cellar/neovim/0.2.0_1/share/nvim/runtime/print/prolog.ps
%!PS-Adobe-3.0 Resource-ProcSet
%%Title: VIM-Prolog
%%Version: 1.4 1
%%EndComments
% Editing of this file is NOT RECOMMENDED.  You run a very good risk of causing
% all PostScript printing from VIM failing if you do.  PostScript is not called
% a write-only language for nothing!
/packedarray where not{userdict begin/setpacking/pop load def/currentpacking
false def end}{pop}ifelse/CP currentpacking def true setpacking
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/d/def ld
/db{dict begin}bd/cde{currentdict end}bd
/T true d/F false d
/SO null d/sv{/SO save d}bd/re{SO restore}bd
/L2 systemdict/languagelevel 2 copy known{get exec}{pop pop 1}ifelse 2 ge d
/m/moveto ld/s/show ld /ms{m s}bd /g/setgray ld/r/setrgbcolor ld/sp{showpage}bd
/gs/gsave ld/gr/grestore ld/cp/currentpoint ld
/ul{gs UW setlinewidth cp UO add 2 copy newpath m 3 1 roll add exch lineto
stroke gr}bd
/bg{gs r cp BO add 4 -2 roll rectfill gr}bd
/sl{90 rotate 0 exch translate}bd
L2{
/sspd{mark exch{setpagedevice}stopped cleartomark}bd
/nc{1 db/NumCopies ed cde sspd}bd
/sps{3 db/Orientation ed[3 1 roll]/PageSize ed/ImagingBBox null d cde sspd}bd
/dt{2 db/Tumble ed/Duplex ed cde sspd}bd
/c{1 db/Collate ed cde sspd}bd
}{
/nc{/#copies ed}bd
/sps{statusdict/setpage get exec}bd
/dt{statusdict/settumble 2 copy known{get exec}{pop pop pop}ifelse
statusdict/setduplexmode 2 copy known{get exec}{pop pop pop}ifelse}bd
/c{pop}bd
}ifelse
/ffs{findfont exch scalefont d}bd/sf{setfont}bd
/ref{1 db findfont dup maxlength dict/NFD ed{exch dup/FID ne{exch NFD 3 1 roll
put}{pop pop}ifelse}forall/Encoding findresource dup length 256 eq{NFD/Encoding
3 -1 roll put}{pop}ifelse NFD dup/FontType get 3 ne{/CharStrings}{/CharProcs}
ifelse 2 copy known{2 copy get dup maxlength dict copy[/questiondown/space]{2
copy known{2 copy get 2 index/.notdef 3 -1 roll put pop exit}if pop}forall put
}{pop pop}ifelse dup NFD/FontName 3 -1 roll put NFD definefont pop end}bd
CP setpacking
(\004)cvn{}bd
% vim:ff=unix:
%%EOF
%%EndDocument
%%EndResource
%%BeginResource: encoding VIM-latin1
%%BeginDocument: /usr/local/Cellar/neovim/0.2.0_1/share/nvim/runtime/print/latin1.ps
%!PS-Adobe-3.0 Resource-Encoding
%%Title: VIM-latin1
%%Version: 1.0 0
%%EndComments
/VIM-latin1[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quotesingle
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/grave /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis]
/Encoding defineresource pop
% vim:ff=unix:
%%EOF
%%EndDocument
%%EndResource
%%EndProlog
%%BeginSetup
595 842 0 sps
1 nc
T F dt
T c
%%IncludeResource: font Courier
/_F0 /VIM-latin1 /Courier ref
/F0 10 /_F0 ffs
%%IncludeResource: font Courier-Bold
/_F1 /VIM-latin1 /Courier-Bold ref
/F1 10 /_F1 ffs
%%IncludeResource: font Courier-Oblique
/_F2 /VIM-latin1 /Courier-Oblique ref
/F2 10 /_F2 ffs
%%IncludeResource: font Courier-BoldOblique
/_F3 /VIM-latin1 /Courier-BoldOblique ref
/F3 10 /_F3 ffs
/UO -1 d
/UW 0.5 d
/BO -2.5 d
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(Types.hs                                                                      Page 1)59.5 792.4 ms
F0 sf
(module Types where)59.5 772.4 ms
(import qualified Data.Set as Set)59.5 762.4 ms
(import qualified Data.Map as Map)59.5 752.4 ms
(data PatToken = PTWild | PTConstr String)59.5 732.4 ms
(  deriving \(Show, Eq, Ord\))59.5 722.4 ms
(data Pattern = Pat PatToken \(Maybe Pattern\))59.5 702.4 ms
(  deriving \(Show, Eq, Ord\))59.5 692.4 ms
(type Env = Map.Map PatToken \(Map.Map PatToken Int\))59.5 672.4 ms
(patwild )59.5 652.4 ms
0 0.498 0.498 r
(::)s
0 g
( Pattern)s
(patwild = Pat PTWild Nothing)59.5 642.4 ms
0.498 0.498 0 r
(---------------------------------------------------------------------------)59.5 622.4 ms
(---------------------------------------------------------------------------)59.5 612.4 ms
(---------------------------------------------------------------------------)59.5 602.4 ms
0 g
(data Pat =)59.5 582.4 ms
(  PatLit Lit)59.5 572.4 ms
(  | PatObj Constr \(Maybe [Pat]\))59.5 562.4 ms
(  | PatTuple [Pat])59.5 552.4 ms
(  | PatWild)59.5 542.4 ms
(  deriving \(Show, Eq, Ord\))59.5 532.4 ms
(data Lit = S String | I Int | C Char | B Bool)59.5 512.4 ms
(  deriving \(Show, Eq, Ord\))59.5 502.4 ms
(data Constr = Constr String)59.5 482.4 ms
(  deriving \(Show, Eq, Ord\))59.5 472.4 ms
(data Match = Match String [Pat])59.5 452.4 ms
(  deriving \(Show, Eq, Ord\))59.5 442.4 ms
(convertLit )59.5 422.4 ms
0 0.498 0.498 r
(::)s
0 g
( Lit -> PatToken)s
(convertLit x = case x of)59.5 412.4 ms
(   \(S s\) -> PTConstr s)59.5 402.4 ms
(   \(I i\) -> PTConstr $ show i)59.5 392.4 ms
(   \(C c\) -> PTConstr $ show c)59.5 382.4 ms
(   \(B b\) -> PTConstr $ show b)59.5 372.4 ms
(convertConstr )59.5 352.4 ms
0 0.498 0.498 r
(::)s
0 g
( Constr -> PatToken)s
(convertConstr \(Constr s\) = PTConstr s)59.5 342.4 ms
(convertPat )59.5 322.4 ms
0 0.498 0.498 r
(::)s
0 g
( Pat -> Maybe Pattern -> Pattern)s
(convertPat \(PatLit l\) k = Pat \(convertLit l\) k)59.5 312.4 ms
(convertPat PatWild k = Pat PTWild k)59.5 302.4 ms
(convertPat \(PatTuple [p]\) k = Pat \(PTConstr "tuple"\) $ Just $ convertPat p k)59.5 292.4 ms
(convertPat \(PatTuple \(p)59.5 282.4 ms
0 0.498 0.498 r
(:)s
0 g
(ps\)\) k =)s
(  let rest = Just $ convertPat \(PatTuple ps\) k in)59.5 272.4 ms
(  let pk = convertPat p rest in)59.5 262.4 ms
(  Pat \(PTConstr "tuple"\) $ Just pk)59.5 252.4 ms
(convertPat \(PatObj c Nothing\) k = Pat \(convertConstr c\) k)59.5 242.4 ms
(convertPat \(PatObj c \(Just pats\)\) k =)59.5 232.4 ms
(  let rest = convertPat \(PatTuple pats\) k in)59.5 222.4 ms
(  Pat \(convertConstr c\) $ Just rest)59.5 212.4 ms
0.498 0.498 0 r
(---------------------------------------------------------------------------)59.5 192.4 ms
(---------------------------------------------------------------------------)59.5 182.4 ms
0 g
(env1 )59.5 172.4 ms
0 0.498 0.498 r
(::)s
0 g
( Map.Map PatToken Int)s
(env1 = Map.fromList [\(PTConstr "True", 0\), \(PTConstr "False", 0\)])59.5 162.4 ms
(env2 = Map.fromList [\(PTConstr "True", env1\), \(PTConstr "False", env1\)])59.5 152.4 ms
(t = Match "f" [PatLit \(B True\), PatLit \(B False\)])59.5 132.4 ms
(tb = Match "f" [PatLit \(B True\), PatLit \(B True\)])59.5 122.4 ms
(ttb = Match "f" [PatLit \(B True\), PatWild])59.5 112.4 ms
(ttf = Match "f" [PatLit \(B True\)])59.5 102.4 ms
(tt = Match "f" [PatWild])59.5 82.4 ms
(ps1 = [\(PatObj \(Constr "Nil"\) Nothing\), \(PatObj \(Constr "Cons"\) \(Just [PatLit \(I 1\),)59.5 62.4 ms
( PatWild]\)\)])59.5 52.4 ms
re sp
%%PageTrailer
%%Page: 2 2
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(Types.hs                                                                      Page 2)59.5 792.4 ms
F0 sf
(e1 )59.5 762.4 ms
0 0.498 0.498 r
(::)s
0 g
( Map.Map PatToken Int)s
(e1 = Map.fromList [\(PTConstr "Nil", 0\), \(PTConstr "Cons", 2\)])59.5 752.4 ms
(e2 = Map.fromList [\(PTConstr "Nil", e1\), \(PTConstr "Cons", e1\)])59.5 742.4 ms
(t3 = Match "f" [\(PatObj \(Constr "Nil"\) Nothing\)])59.5 732.4 ms
(t4 = Match "f" [\(PatObj \(Constr "Nil"\) Nothing\), \(PatObj \(Constr "Cons"\) \(Just [PatW)59.5 722.4 ms
(ild, PatWild]\)\)])59.5 712.4 ms
(t5 = Match "f" [\(PatObj \(Constr "Nil"\) Nothing\), \(PatObj \(Constr "Cons"\) \(Just [PatL)59.5 702.4 ms
(it \(I 1\), PatWild]\)\)])59.5 692.4 ms
(p5 = [\(PatObj \(Constr "Nil"\) Nothing\), \(PatObj \(Constr "Cons"\) \(Just [PatLit \(I 1\), )59.5 672.4 ms
(PatWild]\)\), PatWild])59.5 662.4 ms
(p5' = [\(PatObj \(Constr "Nil"\) Nothing\), \(PatObj \(Constr "Cons"\) \(Just [PatLit \(I 1\),)59.5 652.4 ms
( PatWild]\)\)])59.5 642.4 ms
(p6 = [\(PatObj \(Constr "Nil"\) Nothing\), \(PatObj \(Constr "Cons"\) \(Just p5'\)\)])59.5 632.4 ms
(p6' = [\(PatObj \(Constr "Nil"\) Nothing\), \(PatObj \(Constr "Cons"\) \(Just p5'\)\), PatWild)59.5 622.4 ms
(])59.5 612.4 ms
(t6 = Match "f" p5)59.5 602.4 ms
(t7nonex = Match "f" p6)59.5 592.4 ms
(t7ex = Match "f" p6')59.5 582.4 ms
(p1 = PatObj \(Constr "Cons"\) \(Just [PatLit \(I 1\), PatWild]\))59.5 562.4 ms
0.498 0.498 0 r
({-)59.5 542.4 ms
(Cons 1 Nil)59.5 532.4 ms
(Nil -> Pat "Nil" Nothing)59.5 512.4 ms
(1 -> Pat "1" Nothing)59.5 502.4 ms
(1 Nil -> Pat "1" \(Just \(Pat "Nil" Nothing\)\))59.5 492.4 ms
(\(1, Nil\) -> Pat "tuple" \(Just \(Pat "1" \(Just \(Pat "Nil" Nothing\)\)\)\))59.5 482.4 ms
(Cons\(1, Nil\) -> Pat "Cons" \(Just \(Pat "tuple" \(Just \(Pat "1" \(Just \(Pat "Nil" Nothin)59.5 472.4 ms
(g\)\)\)\)\)\))59.5 462.4 ms
(-})59.5 452.4 ms
re sp
%%PageTrailer
%%Trailer
%%Pages: 2
%%EOF
